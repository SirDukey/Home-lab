#!/bin/bash

# Color palette
YELLOW="\033[33m"
GREEN="\033[32m"
RED="\033[31m"
NC="\033[0m"
WHITE="\033[1;37m"
BLUE='\033[0;34m'

echo -e "${GREEN}Checking for cloud image file${NC}"
FILE="{{ proxmox_template__iso_directory }}/{{ proxmox_template__cloudimg }}"

if [ ! -e $FILE ]; then
    echo -e "${YELLOW}Cloud image file does not exist, downloading the image from the web...${NC}"
    curl -s -o {{ proxmox_template__iso_directory }}/{{ proxmox_template__cloudimg }} {{ proxmox_template__cloudimg_download_url }}
    echo -e "${YELLOW}Cloud image file has been downloaded${NC}"
fi

MAX_VMID=$(qm list | awk 'NR>1 {print $1}' | tail -n1)
lvs | grep {{ proxmox_template__id }}

if [ $? -eq 0 ]; then
    echo -e "${RED}Template already exists${NC}"
    if [ -n "$MAX_VMID" ]; then
        NEXT_VMID=$(echo "$MAX_VMID + 1" | bc)
        echo -e "${GREEN}The next available VMID is${NC} ${WHITE}$NEXT_VMID${NC}"
        echo -e "${BLUE}Update the VMID in the ansible variable file and reprovision this script${NC}"
        echo -e "${YELLOW}Exiting${NC}"
    fi
    exit 1
fi

echo -e "${GREEN}Creating the base vm ${NC}${BLUE}{{ proxmox_template__name }}${NC}"
qm create {{ proxmox_template__id }} --name {{ proxmox_template__name }} --memory 1024 --net0 virtio,bridge=vmbr0

echo -e "${GREEN}Importing the cloud image disk${NC}"
qm importdisk {{ proxmox_template__id }} $FILE {{ proxmox_template__datastore }}

echo -e "${GREEN}Setting options${NC}"
qm set {{ proxmox_template__id }} --scsihw virtio-scsi-pci --scsi0 local-lvm:vm-{{ proxmox_template__id }}-disk-0
qm set {{ proxmox_template__id }} --ide2 local-lvm:cloudinit
qm set {{ proxmox_template__id }} --boot c --bootdisk scsi0
qm set {{ proxmox_template__id }} --serial0 socket --vga serial0

echo -e "${GREEN}Converting the${NC} ${YELLOW}VM ID${NC} ${WHITE}{{ proxmox_template__id }}${NC} ${GREEN}to template ${NC}${BLUE}{{ proxmox_template__name }}${NC}"
qm template {{ proxmox_template__id }}

echo -e "${WHITE}Template${NC} ${BLUE}{{ proxmox_template__name }}${NC} ${GREEN}created and ready${NC} ${WHITE}for Terraform provisioning${NC}"
